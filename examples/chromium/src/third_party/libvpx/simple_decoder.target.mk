# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := simple_decoder
### Generated for rule _home_david_Projects_spa_examples_chromium_src_third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example:
$(obj)/gen/third_party/libvpx/simple_decoder.c: obj := $(abs_obj)
$(obj)/gen/third_party/libvpx/simple_decoder.c: builddir := $(abs_builddir)
$(obj)/gen/third_party/libvpx/simple_decoder.c: TOOLSET := $(TOOLSET)
$(obj)/gen/third_party/libvpx/simple_decoder.c: third_party/libvpx/source/libvpx/examples/simple_decoder.txt $(obj)/gen/third_party/libvpx/simple_decoder/gen_example_code.sh FORCE_DO_CMD
	$(call do_cmd,_home_david_Projects_spa_examples_chromium_src_third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example_0)

all_deps += $(obj)/gen/third_party/libvpx/simple_decoder.c
cmd__home_david_Projects_spa_examples_chromium_src_third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example_0 = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd third_party/libvpx; mkdir -p $(obj)/gen/third_party/libvpx; bash -c "$(obj)/gen/third_party/libvpx/simple_decoder/gen_example_code.sh $(abspath $<) > $(obj)/gen/third_party/libvpx/simple_decoder.c"
quiet_cmd__home_david_Projects_spa_examples_chromium_src_third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example_0 = RULE _home_david_Projects_spa_examples_chromium_src_third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example_0 $@

rule__home_david_Projects_spa_examples_chromium_src_third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example_outputs := \
	$(obj)/gen/third_party/libvpx/simple_decoder.c

### Finished generating for rule: _home_david_Projects_spa_examples_chromium_src_third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example

### Finished generating for all rules

### Generated for copy rule.
$(obj)/gen/third_party/libvpx/simple_decoder/gen_example_code.sh: TOOLSET := $(TOOLSET)
$(obj)/gen/third_party/libvpx/simple_decoder/gen_example_code.sh: third_party/libvpx/source/libvpx/examples/gen_example_code.sh FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(obj)/gen/third_party/libvpx/simple_decoder/gen_example_code.sh
_home_david_Projects_spa_examples_chromium_src_third_party_libvpx_libvpx_gyp_simple_decoder_target_copies = $(obj)/gen/third_party/libvpx/simple_decoder/gen_example_code.sh

DEFS_Debug := \
	'-D_FILE_OFFSET_BITS=64' \
	'-DUSE_LINUX_BREAKPAD' \
	'-DCHROMIUM_BUILD' \
	'-DUSE_DEFAULT_RENDER_THEME=1' \
	'-DUSE_LIBJPEG_TURBO=1' \
	'-DUSE_NSS=1' \
	'-DUSE_X11=1' \
	'-DENABLE_ONE_CLICK_SIGNIN' \
	'-DGTK_DISABLE_SINGLE_INCLUDES=1' \
	'-DENABLE_REMOTING=1' \
	'-DENABLE_WEBRTC=1' \
	'-DENABLE_CONFIGURATION_POLICY' \
	'-DENABLE_INPUT_SPEECH' \
	'-DENABLE_NOTIFICATIONS' \
	'-DENABLE_GPU=1' \
	'-DENABLE_EGLIMAGE=1' \
	'-DENABLE_TASK_MANAGER=1' \
	'-DENABLE_EXTENSIONS=1' \
	'-DENABLE_PLUGIN_INSTALLATION=1' \
	'-DENABLE_PLUGINS=1' \
	'-DENABLE_SESSION_SERVICE=1' \
	'-DENABLE_THEMES=1' \
	'-DENABLE_BACKGROUND=1' \
	'-DENABLE_AUTOMATION=1' \
	'-DENABLE_GOOGLE_NOW=1' \
	'-DENABLE_LANGUAGE_DETECTION=1' \
	'-DENABLE_PRINTING=1' \
	'-DENABLE_CAPTIVE_PORTAL_DETECTION=1' \
	'-DENABLE_MANAGED_USERS=1' \
	'-DDYNAMIC_ANNOTATIONS_ENABLED=1' \
	'-DWTF_USE_DYNAMIC_ANNOTATIONS=1' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fstack-protector \
	--param=ssp-buffer-size=4 \
	-pthread \
	-fno-exceptions \
	-fno-strict-aliasing \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-fvisibility=hidden \
	-pipe \
	-fPIC \
	-Wno-format \
	-Wno-unused-result \
	-O0 \
	-g

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-threadsafe-statics \
	-fvisibility-inlines-hidden \
	-Wno-deprecated

INCS_Debug := \
	-Ithird_party/libvpx/source/libvpx

DEFS_Release := \
	'-D_FILE_OFFSET_BITS=64' \
	'-DUSE_LINUX_BREAKPAD' \
	'-DCHROMIUM_BUILD' \
	'-DUSE_DEFAULT_RENDER_THEME=1' \
	'-DUSE_LIBJPEG_TURBO=1' \
	'-DUSE_NSS=1' \
	'-DUSE_X11=1' \
	'-DENABLE_ONE_CLICK_SIGNIN' \
	'-DGTK_DISABLE_SINGLE_INCLUDES=1' \
	'-DENABLE_REMOTING=1' \
	'-DENABLE_WEBRTC=1' \
	'-DENABLE_CONFIGURATION_POLICY' \
	'-DENABLE_INPUT_SPEECH' \
	'-DENABLE_NOTIFICATIONS' \
	'-DENABLE_GPU=1' \
	'-DENABLE_EGLIMAGE=1' \
	'-DENABLE_TASK_MANAGER=1' \
	'-DENABLE_EXTENSIONS=1' \
	'-DENABLE_PLUGIN_INSTALLATION=1' \
	'-DENABLE_PLUGINS=1' \
	'-DENABLE_SESSION_SERVICE=1' \
	'-DENABLE_THEMES=1' \
	'-DENABLE_BACKGROUND=1' \
	'-DENABLE_AUTOMATION=1' \
	'-DENABLE_GOOGLE_NOW=1' \
	'-DENABLE_LANGUAGE_DETECTION=1' \
	'-DENABLE_PRINTING=1' \
	'-DENABLE_CAPTIVE_PORTAL_DETECTION=1' \
	'-DENABLE_MANAGED_USERS=1' \
	'-DNDEBUG' \
	'-DNVALGRIND' \
	'-DDYNAMIC_ANNOTATIONS_ENABLED=0'

# Flags passed to all source files.
CFLAGS_Release := \
	-fstack-protector \
	--param=ssp-buffer-size=4 \
	-pthread \
	-fno-exceptions \
	-fno-strict-aliasing \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-fvisibility=hidden \
	-pipe \
	-fPIC \
	-Wno-format \
	-Wno-unused-result \
	-O2 \
	-fno-ident \
	-fdata-sections \
	-ffunction-sections

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-threadsafe-statics \
	-fvisibility-inlines-hidden \
	-Wno-deprecated

INCS_Release := \
	-Ithird_party/libvpx/source/libvpx

OBJS := \
	$(obj).target/$(TARGET)/gen/third_party/libvpx/simple_decoder.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(obj).target/third_party/libvpx/libvpx.a $(obj).target/third_party/libvpx/gen_asm_offsets_vp8.stamp $(obj).target/third_party/libvpx/libvpx_asm_offsets_vp8.a $(obj).target/third_party/libvpx/libvpx_intrinsics_mmx.a $(obj).target/third_party/libvpx/libvpx_intrinsics_sse2.a $(obj).target/third_party/libvpx/libvpx_intrinsics_ssse3.a

# Make sure our actions/rules run before any of us.
$(OBJS): | $(rule__home_david_Projects_spa_examples_chromium_src_third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example_outputs) $(_home_david_Projects_spa_examples_chromium_src_third_party_libvpx_libvpx_gyp_simple_decoder_target_copies)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
# Build our special outputs first.
$(builddir)/simple_decoder: | $(rule__home_david_Projects_spa_examples_chromium_src_third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example_outputs) $(_home_david_Projects_spa_examples_chromium_src_third_party_libvpx_libvpx_gyp_simple_decoder_target_copies)

# Preserve order dependency of special output on deps.
$(rule__home_david_Projects_spa_examples_chromium_src_third_party_libvpx_libvpx_gyp_simple_decoder_target_generate_example_outputs) $(_home_david_Projects_spa_examples_chromium_src_third_party_libvpx_libvpx_gyp_simple_decoder_target_copies): | $(obj).target/third_party/libvpx/libvpx.a $(obj).target/third_party/libvpx/gen_asm_offsets_vp8.stamp $(obj).target/third_party/libvpx/libvpx_asm_offsets_vp8.a $(obj).target/third_party/libvpx/libvpx_intrinsics_mmx.a $(obj).target/third_party/libvpx/libvpx_intrinsics_sse2.a $(obj).target/third_party/libvpx/libvpx_intrinsics_ssse3.a

LDFLAGS_Debug := \
	-Wl,-z,now \
	-Wl,-z,relro \
	-pthread \
	-Wl,-z,noexecstack \
	-fPIC \
	-Wl,--threads \
	-Wl,--thread-count=4 \
	-B$(builddir)/../../third_party/gold \
	-Wl,--icf=none

LDFLAGS_Release := \
	-Wl,-z,now \
	-Wl,-z,relro \
	-pthread \
	-Wl,-z,noexecstack \
	-fPIC \
	-Wl,--threads \
	-Wl,--thread-count=4 \
	-B$(builddir)/../../third_party/gold \
	-Wl,--icf=none \
	-Wl,-O1 \
	-Wl,--as-needed \
	-Wl,--gc-sections

LIBS := \
	

$(builddir)/simple_decoder: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/simple_decoder: LIBS := $(LIBS)
$(builddir)/simple_decoder: LD_INPUTS := $(OBJS) $(obj).target/third_party/libvpx/libvpx.a $(obj).target/third_party/libvpx/libvpx_asm_offsets_vp8.a $(obj).target/third_party/libvpx/libvpx_intrinsics_mmx.a $(obj).target/third_party/libvpx/libvpx_intrinsics_sse2.a $(obj).target/third_party/libvpx/libvpx_intrinsics_ssse3.a
$(builddir)/simple_decoder: TOOLSET := $(TOOLSET)
$(builddir)/simple_decoder: $(OBJS) $(obj).target/third_party/libvpx/libvpx.a $(obj).target/third_party/libvpx/libvpx_asm_offsets_vp8.a $(obj).target/third_party/libvpx/libvpx_intrinsics_mmx.a $(obj).target/third_party/libvpx/libvpx_intrinsics_sse2.a $(obj).target/third_party/libvpx/libvpx_intrinsics_ssse3.a FORCE_DO_CMD
	$(call do_cmd,link)

all_deps += $(builddir)/simple_decoder
# Add target alias
.PHONY: simple_decoder
simple_decoder: $(builddir)/simple_decoder

