# This file is generated by gyp; do not edit.

TOOLSET := host
TARGET := generate_files
### Rules for action "generate_x86_insn":
quiet_cmd__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_x86_insn = ACTION Running source/patched-yasm/modules/arch/x86/gen_x86_insn.py. $@
cmd__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_x86_insn = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd third_party/yasm; mkdir -p $(obj)/gen/third_party/yasm; python source/patched-yasm/modules/arch/x86/gen_x86_insn.py "$(obj)/gen/third_party/yasm"

$(obj)/gen/third_party/yasm/x86insns.c: obj := $(abs_obj)
$(obj)/gen/third_party/yasm/x86insns.c: builddir := $(abs_builddir)
$(obj)/gen/third_party/yasm/x86insns.c: TOOLSET := $(TOOLSET)
$(obj)/gen/third_party/yasm/x86insns.c: third_party/yasm/source/patched-yasm/modules/arch/x86/gen_x86_insn.py FORCE_DO_CMD
	$(call do_cmd,_home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_x86_insn)
$(obj)/gen/third_party/yasm/x86insn_gas.gperf $(obj)/gen/third_party/yasm/x86insn_nasm.gperf: $(obj)/gen/third_party/yasm/x86insns.c
$(obj)/gen/third_party/yasm/x86insn_gas.gperf $(obj)/gen/third_party/yasm/x86insn_nasm.gperf: ;

all_deps += $(obj)/gen/third_party/yasm/x86insns.c $(obj)/gen/third_party/yasm/x86insn_gas.gperf $(obj)/gen/third_party/yasm/x86insn_nasm.gperf
action__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_x86_insn_outputs := $(obj)/gen/third_party/yasm/x86insns.c $(obj)/gen/third_party/yasm/x86insn_gas.gperf $(obj)/gen/third_party/yasm/x86insn_nasm.gperf

### Rules for action "generate_version":
quiet_cmd__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_version = ACTION Generating yasm version file: $(obj)/gen/third_party/yasm/version.mac. $@
cmd__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_version = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd third_party/yasm; mkdir -p $(obj)/gen/third_party/yasm; "$(builddir)/genversion" "$(obj)/gen/third_party/yasm/version.mac"

$(obj)/gen/third_party/yasm/version.mac: obj := $(abs_obj)
$(obj)/gen/third_party/yasm/version.mac: builddir := $(abs_builddir)
$(obj)/gen/third_party/yasm/version.mac: TOOLSET := $(TOOLSET)
$(obj)/gen/third_party/yasm/version.mac: $(builddir)/genversion FORCE_DO_CMD
	$(call do_cmd,_home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_version)

all_deps += $(obj)/gen/third_party/yasm/version.mac
action__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_version_outputs := $(obj)/gen/third_party/yasm/version.mac


### Generated for rule _home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_gperf:
$(obj)/gen/third_party/yasm/x86cpu.c: obj := $(abs_obj)
$(obj)/gen/third_party/yasm/x86cpu.c: builddir := $(abs_builddir)
$(obj)/gen/third_party/yasm/x86cpu.c: TOOLSET := $(TOOLSET)
$(obj)/gen/third_party/yasm/x86cpu.c: third_party/yasm/source/patched-yasm/modules/arch/x86/x86cpu.gperf $(builddir)/genperf FORCE_DO_CMD
	$(call do_cmd,_home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_gperf_0)

all_deps += $(obj)/gen/third_party/yasm/x86cpu.c
cmd__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_gperf_0 = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd third_party/yasm; mkdir -p $(obj)/gen/third_party/yasm; "$(builddir)/genperf" "$(abspath $<)" "$(obj)/gen/third_party/yasm/x86cpu.c"
quiet_cmd__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_gperf_0 = RULE _home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_gperf_0 $@

$(obj)/gen/third_party/yasm/x86regtmod.c: obj := $(abs_obj)
$(obj)/gen/third_party/yasm/x86regtmod.c: builddir := $(abs_builddir)
$(obj)/gen/third_party/yasm/x86regtmod.c: TOOLSET := $(TOOLSET)
$(obj)/gen/third_party/yasm/x86regtmod.c: third_party/yasm/source/patched-yasm/modules/arch/x86/x86regtmod.gperf $(builddir)/genperf FORCE_DO_CMD
	$(call do_cmd,_home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_gperf_1)

all_deps += $(obj)/gen/third_party/yasm/x86regtmod.c
cmd__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_gperf_1 = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd third_party/yasm; mkdir -p $(obj)/gen/third_party/yasm; "$(builddir)/genperf" "$(abspath $<)" "$(obj)/gen/third_party/yasm/x86regtmod.c"
quiet_cmd__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_gperf_1 = RULE _home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_gperf_1 $@

rule__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_gperf_outputs := \
	$(obj)/gen/third_party/yasm/x86cpu.c \
	$(obj)/gen/third_party/yasm/x86regtmod.c

### Finished generating for rule: _home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_gperf

### Finished generating for all rules

DEFS_Debug := \
	'-D_FILE_OFFSET_BITS=64' \
	'-DUSE_LINUX_BREAKPAD' \
	'-DCHROMIUM_BUILD' \
	'-DUSE_DEFAULT_RENDER_THEME=1' \
	'-DUSE_LIBJPEG_TURBO=1' \
	'-DUSE_NSS=1' \
	'-DUSE_X11=1' \
	'-DENABLE_ONE_CLICK_SIGNIN' \
	'-DGTK_DISABLE_SINGLE_INCLUDES=1' \
	'-DENABLE_REMOTING=1' \
	'-DENABLE_WEBRTC=1' \
	'-DENABLE_CONFIGURATION_POLICY' \
	'-DENABLE_INPUT_SPEECH' \
	'-DENABLE_NOTIFICATIONS' \
	'-DENABLE_GPU=1' \
	'-DENABLE_EGLIMAGE=1' \
	'-DENABLE_TASK_MANAGER=1' \
	'-DENABLE_EXTENSIONS=1' \
	'-DENABLE_PLUGIN_INSTALLATION=1' \
	'-DENABLE_PLUGINS=1' \
	'-DENABLE_SESSION_SERVICE=1' \
	'-DENABLE_THEMES=1' \
	'-DENABLE_BACKGROUND=1' \
	'-DENABLE_AUTOMATION=1' \
	'-DENABLE_GOOGLE_NOW=1' \
	'-DENABLE_LANGUAGE_DETECTION=1' \
	'-DENABLE_PRINTING=1' \
	'-DENABLE_CAPTIVE_PORTAL_DETECTION=1' \
	'-DENABLE_MANAGED_USERS=1' \
	'-DDYNAMIC_ANNOTATIONS_ENABLED=1' \
	'-DWTF_USE_DYNAMIC_ANNOTATIONS=1' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fstack-protector \
	--param=ssp-buffer-size=4 \
	-Werror \
	-pthread \
	-fno-exceptions \
	-fno-strict-aliasing \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-fvisibility=hidden \
	-pipe \
	-fPIC \
	-Wheader-hygiene \
	-Wno-unused-function \
	-Wno-char-subscripts \
	-Wno-unnamed-type-template-args \
	-Wno-c++11-extensions \
	-Wno-covered-switch-default \
	-Wstring-conversion \
	-Xclang \
	-load \
	-Xclang \
	/home/david/Projects/spa/examples/chromium/src/tools/clang/scripts/../../../third_party/llvm-build/Release+Asserts/lib/libFindBadConstructs.so \
	-Xclang \
	-add-plugin \
	-Xclang \
	find-bad-constructs \
	-Xclang \
	-plugin-arg-find-bad-constructs \
	-Xclang \
	skip-virtuals-in-implementations \
	-Wno-format \
	-Wno-unused-result \
	-O0 \
	-g

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-threadsafe-statics \
	-fvisibility-inlines-hidden \
	-Wno-deprecated

INCS_Debug :=

DEFS_Release := \
	'-D_FILE_OFFSET_BITS=64' \
	'-DUSE_LINUX_BREAKPAD' \
	'-DCHROMIUM_BUILD' \
	'-DUSE_DEFAULT_RENDER_THEME=1' \
	'-DUSE_LIBJPEG_TURBO=1' \
	'-DUSE_NSS=1' \
	'-DUSE_X11=1' \
	'-DENABLE_ONE_CLICK_SIGNIN' \
	'-DGTK_DISABLE_SINGLE_INCLUDES=1' \
	'-DENABLE_REMOTING=1' \
	'-DENABLE_WEBRTC=1' \
	'-DENABLE_CONFIGURATION_POLICY' \
	'-DENABLE_INPUT_SPEECH' \
	'-DENABLE_NOTIFICATIONS' \
	'-DENABLE_GPU=1' \
	'-DENABLE_EGLIMAGE=1' \
	'-DENABLE_TASK_MANAGER=1' \
	'-DENABLE_EXTENSIONS=1' \
	'-DENABLE_PLUGIN_INSTALLATION=1' \
	'-DENABLE_PLUGINS=1' \
	'-DENABLE_SESSION_SERVICE=1' \
	'-DENABLE_THEMES=1' \
	'-DENABLE_BACKGROUND=1' \
	'-DENABLE_AUTOMATION=1' \
	'-DENABLE_GOOGLE_NOW=1' \
	'-DENABLE_LANGUAGE_DETECTION=1' \
	'-DENABLE_PRINTING=1' \
	'-DENABLE_CAPTIVE_PORTAL_DETECTION=1' \
	'-DENABLE_MANAGED_USERS=1' \
	'-DNDEBUG' \
	'-DNVALGRIND' \
	'-DDYNAMIC_ANNOTATIONS_ENABLED=0'

# Flags passed to all source files.
CFLAGS_Release := \
	-fstack-protector \
	--param=ssp-buffer-size=4 \
	-Werror \
	-pthread \
	-fno-exceptions \
	-fno-strict-aliasing \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-fvisibility=hidden \
	-pipe \
	-fPIC \
	-Wheader-hygiene \
	-Wno-unused-function \
	-Wno-char-subscripts \
	-Wno-unnamed-type-template-args \
	-Wno-c++11-extensions \
	-Wno-covered-switch-default \
	-Wstring-conversion \
	-Xclang \
	-load \
	-Xclang \
	/home/david/Projects/spa/examples/chromium/src/tools/clang/scripts/../../../third_party/llvm-build/Release+Asserts/lib/libFindBadConstructs.so \
	-Xclang \
	-add-plugin \
	-Xclang \
	find-bad-constructs \
	-Xclang \
	-plugin-arg-find-bad-constructs \
	-Xclang \
	skip-virtuals-in-implementations \
	-Wno-format \
	-Wno-unused-result \
	-O2 \
	-fdata-sections \
	-ffunction-sections

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-threadsafe-statics \
	-fvisibility-inlines-hidden \
	-Wno-deprecated

INCS_Release :=

OBJS :=

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(builddir)/genperf $(builddir)/genversion

# Make sure our actions/rules run before any of us.
$(OBJS): | $(action__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_x86_insn_outputs) $(action__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_version_outputs) $(rule__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_gperf_outputs)


### Rules for final target.
# Build our special outputs first.
$(obj).host/third_party/yasm/generate_files.stamp: | $(action__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_x86_insn_outputs) $(action__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_version_outputs) $(rule__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_gperf_outputs)

# Preserve order dependency of special output on deps.
$(action__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_x86_insn_outputs) $(action__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_version_outputs) $(rule__home_david_Projects_spa_examples_chromium_src_third_party_yasm_yasm_gyp_generate_files_host_generate_gperf_outputs): | $(builddir)/genperf $(builddir)/genversion

$(obj).host/third_party/yasm/generate_files.stamp: TOOLSET := $(TOOLSET)
$(obj).host/third_party/yasm/generate_files.stamp: $(builddir)/genperf $(builddir)/genversion FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).host/third_party/yasm/generate_files.stamp
# Add target alias
.PHONY: generate_files
generate_files: $(obj).host/third_party/yasm/generate_files.stamp

# Add target alias to "all" target.
.PHONY: all
all: generate_files

