# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := ppGoogleNaClPluginChrome
DEFS_Debug := \
	'-D_FILE_OFFSET_BITS=64' \
	'-DUSE_LINUX_BREAKPAD' \
	'-DNACL_LINUX=1' \
	'-DNACL_ANDROID=0' \
	'-DNACL_OSX=0' \
	'-DNACL_WINDOWS=0' \
	'-D_BSD_SOURCE=1' \
	'-D_POSIX_C_SOURCE=199506' \
	'-D_XOPEN_SOURCE=600' \
	'-D_GNU_SOURCE=1' \
	'-D__STDC_LIMIT_MACROS=1' \
	'-D__STDC_FORMAT_MACROS' \
	'-DCHROMIUM_BUILD' \
	'-DUSE_DEFAULT_RENDER_THEME=1' \
	'-DUSE_LIBJPEG_TURBO=1' \
	'-DUSE_NSS=1' \
	'-DUSE_X11=1' \
	'-DENABLE_ONE_CLICK_SIGNIN' \
	'-DGTK_DISABLE_SINGLE_INCLUDES=1' \
	'-DENABLE_REMOTING=1' \
	'-DENABLE_WEBRTC=1' \
	'-DENABLE_CONFIGURATION_POLICY' \
	'-DENABLE_INPUT_SPEECH' \
	'-DENABLE_NOTIFICATIONS' \
	'-DENABLE_GPU=1' \
	'-DENABLE_EGLIMAGE=1' \
	'-DENABLE_TASK_MANAGER=1' \
	'-DENABLE_EXTENSIONS=1' \
	'-DENABLE_PLUGIN_INSTALLATION=1' \
	'-DENABLE_PLUGINS=1' \
	'-DENABLE_SESSION_SERVICE=1' \
	'-DENABLE_THEMES=1' \
	'-DENABLE_BACKGROUND=1' \
	'-DENABLE_AUTOMATION=1' \
	'-DENABLE_GOOGLE_NOW=1' \
	'-DENABLE_LANGUAGE_DETECTION=1' \
	'-DENABLE_PRINTING=1' \
	'-DENABLE_CAPTIVE_PORTAL_DETECTION=1' \
	'-DENABLE_MANAGED_USERS=1' \
	'-DXP_UNIX' \
	'-DMOZ_X11' \
	'-DNACL_TARGET_SUBARCH=64' \
	'-DNACL_TARGET_ARCH=x86' \
	'-DNACL_BUILD_SUBARCH=64' \
	'-DNACL_BUILD_ARCH=x86' \
	'-D__STDC_CONSTANT_MACROS' \
	'-DDYNAMIC_ANNOTATIONS_ENABLED=1' \
	'-DWTF_USE_DYNAMIC_ANNOTATIONS=1' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fstack-protector \
	--param=ssp-buffer-size=4 \
	-Werror \
	-pthread \
	-fno-exceptions \
	-fno-strict-aliasing \
	-Wall \
	-Wno-missing-field-initializers \
	-fvisibility=hidden \
	-pipe \
	-fPIC \
	-Wheader-hygiene \
	-Wno-unused-function \
	-Wno-char-subscripts \
	-Wno-unnamed-type-template-args \
	-Wno-c++11-extensions \
	-Wno-covered-switch-default \
	-Wstring-conversion \
	-Xclang \
	-load \
	-Xclang \
	/home/david/Projects/spa/examples/chromium/src/tools/clang/scripts/../../../third_party/llvm-build/Release+Asserts/lib/libFindBadConstructs.so \
	-Xclang \
	-add-plugin \
	-Xclang \
	find-bad-constructs \
	-Xclang \
	-plugin-arg-find-bad-constructs \
	-Xclang \
	skip-virtuals-in-implementations \
	-Werror \
	-pthread \
	-fno-exceptions \
	-Wall \
	-m64 \
	-fno-exceptions \
	-Wall \
	-Wno-long-long \
	-Wheader-hygiene \
	-Wno-unused-function \
	-Wno-char-subscripts \
	-Wno-unnamed-type-template-args \
	-Wno-covered-switch-default \
	-Wno-c++11-extensions \
	-pthread \
	-I/usr/include/glib-2.0 \
	-I/usr/lib/x86_64-linux-gnu/glib-2.0/include \
	-I/usr/include/gtk-2.0 \
	-I/usr/lib/x86_64-linux-gnu/gtk-2.0/include \
	-I/usr/include/atk-1.0 \
	-I/usr/include/cairo \
	-I/usr/include/gdk-pixbuf-2.0 \
	-I/usr/include/pango-1.0 \
	-I/usr/include/gio-unix-2.0/ \
	-I/usr/include/freetype2 \
	-I/usr/include/pixman-1 \
	-I/usr/include/libpng12 \
	-I/usr/include/harfbuzz \
	-O0 \
	-g \
	-O0 \
	-g

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-threadsafe-statics \
	-fvisibility-inlines-hidden \
	-Wsign-compare \
	-fno-rtti \
	-fno-threadsafe-statics

INCS_Debug := \
	-Ippapi \
	-Inative_client/src/third_party \
	-I. \
	-Ithird_party/jsoncpp/overrides/include \
	-Ithird_party/jsoncpp/source/include

DEFS_Release := \
	'-D_FILE_OFFSET_BITS=64' \
	'-DUSE_LINUX_BREAKPAD' \
	'-DNACL_LINUX=1' \
	'-DNACL_ANDROID=0' \
	'-DNACL_OSX=0' \
	'-DNACL_WINDOWS=0' \
	'-D_BSD_SOURCE=1' \
	'-D_POSIX_C_SOURCE=199506' \
	'-D_XOPEN_SOURCE=600' \
	'-D_GNU_SOURCE=1' \
	'-D__STDC_LIMIT_MACROS=1' \
	'-D__STDC_FORMAT_MACROS' \
	'-DCHROMIUM_BUILD' \
	'-DUSE_DEFAULT_RENDER_THEME=1' \
	'-DUSE_LIBJPEG_TURBO=1' \
	'-DUSE_NSS=1' \
	'-DUSE_X11=1' \
	'-DENABLE_ONE_CLICK_SIGNIN' \
	'-DGTK_DISABLE_SINGLE_INCLUDES=1' \
	'-DENABLE_REMOTING=1' \
	'-DENABLE_WEBRTC=1' \
	'-DENABLE_CONFIGURATION_POLICY' \
	'-DENABLE_INPUT_SPEECH' \
	'-DENABLE_NOTIFICATIONS' \
	'-DENABLE_GPU=1' \
	'-DENABLE_EGLIMAGE=1' \
	'-DENABLE_TASK_MANAGER=1' \
	'-DENABLE_EXTENSIONS=1' \
	'-DENABLE_PLUGIN_INSTALLATION=1' \
	'-DENABLE_PLUGINS=1' \
	'-DENABLE_SESSION_SERVICE=1' \
	'-DENABLE_THEMES=1' \
	'-DENABLE_BACKGROUND=1' \
	'-DENABLE_AUTOMATION=1' \
	'-DENABLE_GOOGLE_NOW=1' \
	'-DENABLE_LANGUAGE_DETECTION=1' \
	'-DENABLE_PRINTING=1' \
	'-DENABLE_CAPTIVE_PORTAL_DETECTION=1' \
	'-DENABLE_MANAGED_USERS=1' \
	'-DXP_UNIX' \
	'-DMOZ_X11' \
	'-DNACL_TARGET_SUBARCH=64' \
	'-DNACL_TARGET_ARCH=x86' \
	'-DNACL_BUILD_SUBARCH=64' \
	'-DNACL_BUILD_ARCH=x86' \
	'-D__STDC_CONSTANT_MACROS' \
	'-DNDEBUG' \
	'-DNVALGRIND' \
	'-DDYNAMIC_ANNOTATIONS_ENABLED=0' \
	'-D_FORTIFY_SOURCE=2'

# Flags passed to all source files.
CFLAGS_Release := \
	-fstack-protector \
	--param=ssp-buffer-size=4 \
	-Werror \
	-pthread \
	-fno-exceptions \
	-fno-strict-aliasing \
	-Wall \
	-Wno-missing-field-initializers \
	-fvisibility=hidden \
	-pipe \
	-fPIC \
	-Wheader-hygiene \
	-Wno-unused-function \
	-Wno-char-subscripts \
	-Wno-unnamed-type-template-args \
	-Wno-c++11-extensions \
	-Wno-covered-switch-default \
	-Wstring-conversion \
	-Xclang \
	-load \
	-Xclang \
	/home/david/Projects/spa/examples/chromium/src/tools/clang/scripts/../../../third_party/llvm-build/Release+Asserts/lib/libFindBadConstructs.so \
	-Xclang \
	-add-plugin \
	-Xclang \
	find-bad-constructs \
	-Xclang \
	-plugin-arg-find-bad-constructs \
	-Xclang \
	skip-virtuals-in-implementations \
	-Werror \
	-pthread \
	-fno-exceptions \
	-Wall \
	-m64 \
	-fno-exceptions \
	-Wall \
	-Wno-long-long \
	-Wheader-hygiene \
	-Wno-unused-function \
	-Wno-char-subscripts \
	-Wno-unnamed-type-template-args \
	-Wno-covered-switch-default \
	-Wno-c++11-extensions \
	-pthread \
	-I/usr/include/glib-2.0 \
	-I/usr/lib/x86_64-linux-gnu/glib-2.0/include \
	-I/usr/include/gtk-2.0 \
	-I/usr/lib/x86_64-linux-gnu/gtk-2.0/include \
	-I/usr/include/atk-1.0 \
	-I/usr/include/cairo \
	-I/usr/include/gdk-pixbuf-2.0 \
	-I/usr/include/pango-1.0 \
	-I/usr/include/gio-unix-2.0/ \
	-I/usr/include/freetype2 \
	-I/usr/include/pixman-1 \
	-I/usr/include/libpng12 \
	-I/usr/include/harfbuzz \
	-O2 \
	-fdata-sections \
	-ffunction-sections \
	-O2 \
	-fdata-sections \
	-ffunction-sections

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-threadsafe-statics \
	-fvisibility-inlines-hidden \
	-Wsign-compare \
	-fno-rtti \
	-fno-threadsafe-statics

INCS_Release := \
	-Ippapi \
	-Inative_client/src/third_party \
	-I. \
	-Ithird_party/jsoncpp/overrides/include \
	-Ithird_party/jsoncpp/source/include

OBJS := \
	$(obj).target/$(TARGET)/ppapi/native_client/src/trusted/plugin/file_downloader.o \
	$(obj).target/$(TARGET)/ppapi/native_client/src/trusted/plugin/json_manifest.o \
	$(obj).target/$(TARGET)/ppapi/native_client/src/trusted/plugin/local_temp_file.o \
	$(obj).target/$(TARGET)/ppapi/native_client/src/trusted/plugin/module_ppapi.o \
	$(obj).target/$(TARGET)/ppapi/native_client/src/trusted/plugin/nacl_subprocess.o \
	$(obj).target/$(TARGET)/ppapi/native_client/src/trusted/plugin/plugin.o \
	$(obj).target/$(TARGET)/ppapi/native_client/src/trusted/plugin/pnacl_coordinator.o \
	$(obj).target/$(TARGET)/ppapi/native_client/src/trusted/plugin/pnacl_options.o \
	$(obj).target/$(TARGET)/ppapi/native_client/src/trusted/plugin/pnacl_resources.o \
	$(obj).target/$(TARGET)/ppapi/native_client/src/trusted/plugin/pnacl_translate_thread.o \
	$(obj).target/$(TARGET)/ppapi/native_client/src/trusted/plugin/scriptable_plugin.o \
	$(obj).target/$(TARGET)/ppapi/native_client/src/trusted/plugin/sel_ldr_launcher_chrome.o \
	$(obj).target/$(TARGET)/ppapi/native_client/src/trusted/plugin/service_runtime.o \
	$(obj).target/$(TARGET)/ppapi/native_client/src/trusted/plugin/srpc_client.o \
	$(obj).target/$(TARGET)/ppapi/native_client/src/trusted/plugin/srpc_params.o \
	$(obj).target/$(TARGET)/ppapi/native_client/src/trusted/plugin/temporary_file.o \
	$(obj).target/$(TARGET)/ppapi/native_client/src/trusted/plugin/utility.o \
	$(obj).target/$(TARGET)/ppapi/native_client/src/trusted/plugin/arch_x86/sandbox_isa.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(obj).target/media/libshared_memory_support.a $(obj).target/native_client/src/shared/gio/libgio.a $(obj).target/native_client/src/shared/imc/libimc.a $(obj).target/native_client/src/shared/platform/libplatform.a $(obj).target/native_client/src/shared/srpc/libnonnacl_srpc.a $(obj).target/native_client/src/trusted/desc/libnrd_xfer.a $(obj).target/native_client/src/trusted/nonnacl_util/libnonnacl_util.a $(obj).target/native_client/src/trusted/platform_qualify/libplatform_qual_lib.a $(obj).target/native_client/src/trusted/gio/libgio_wrapped_desc.a $(obj).target/native_client/src/trusted/simple_service/libsimple_service.a $(obj).target/native_client/src/trusted/reverse_service/libreverse_service.a $(obj).target/native_client/src/trusted/weak_ref/libweak_ref.a $(obj).target/ppapi/libppapi_cpp.a $(obj).target/third_party/jsoncpp/libjsoncpp.a $(obj).target/base/libbase.a $(obj).target/base/libbase_static.a $(obj).target/base/allocator/liballocator_extension_thunks.a $(obj).target/testing/gtest_prod.stamp $(obj).target/third_party/modp_b64/libmodp_b64.a $(obj).target/base/third_party/dynamic_annotations/libdynamic_annotations.a $(obj).target/base/libsymbolize.a $(obj).target/build/linux/glib.stamp $(obj).target/base/libxdg_mime.a $(obj).target/build/linux/gtk.stamp $(obj).target/build/linux/x11.stamp $(obj).target/third_party/libevent/libevent.a $(obj).target/media/libmedia_sse.a $(obj).target/native_client/src/trusted/desc/libdesc_wrapper.a $(obj).target/native_client/src/trusted/nacl_base/libnacl_base.a $(obj).target/native_client/src/trusted/nonnacl_util/libsel_ldr_launcher.a $(obj).target/native_client/src/shared/serialization/libserialization.a $(obj).target/native_client/src/trusted/service_runtime/libenv_cleanser.a $(obj).target/native_client/src/trusted/service_runtime/libnacl_error_code.a $(obj).target/native_client/src/trusted/cpu_features/libcpu_features.a $(obj).target/native_client/src/trusted/threading/libthread_interface.a $(obj).target/ppapi/ppapi_c.stamp $(obj).target/ppapi/libppapi_cpp_objects.a

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-Wl,-z,now \
	-Wl,-z,relro \
	-pthread \
	-Wl,-z,noexecstack \
	-fPIC \
	-Wl,--threads \
	-Wl,--thread-count=4 \
	-B$(builddir)/../../third_party/gold \
	-pthread \
	-Wl,-z,noexecstack \
	-m64 \
	-Wl,-z,defs \
	-Wl,--icf=none \
	-rdynamic

LDFLAGS_Release := \
	-Wl,-z,now \
	-Wl,-z,relro \
	-pthread \
	-Wl,-z,noexecstack \
	-fPIC \
	-Wl,--threads \
	-Wl,--thread-count=4 \
	-B$(builddir)/../../third_party/gold \
	-pthread \
	-Wl,-z,noexecstack \
	-m64 \
	-Wl,-z,defs \
	-Wl,--icf=none \
	-Wl,-O1 \
	-Wl,--as-needed \
	-Wl,--gc-sections

LIBS := \
	 \
	-ldl \
	-lrt \
	-lpthread \
	-lgmodule-2.0 \
	-lgobject-2.0 \
	-lgthread-2.0 \
	-lglib-2.0 \
	-lXtst \
	-lgtk-x11-2.0 \
	-lgdk-x11-2.0 \
	-latk-1.0 \
	-lgio-2.0 \
	-lpangoft2-1.0 \
	-lpangocairo-1.0 \
	-lgdk_pixbuf-2.0 \
	-lcairo \
	-lpango-1.0 \
	-lfontconfig \
	-lfreetype \
	-lX11 \
	-lXi

$(obj).target/ppapi/native_client/src/trusted/plugin/libppGoogleNaClPluginChrome.so: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/ppapi/native_client/src/trusted/plugin/libppGoogleNaClPluginChrome.so: LIBS := $(LIBS)
$(obj).target/ppapi/native_client/src/trusted/plugin/libppGoogleNaClPluginChrome.so: TOOLSET := $(TOOLSET)
$(obj).target/ppapi/native_client/src/trusted/plugin/libppGoogleNaClPluginChrome.so: $(OBJS) $(obj).target/media/libshared_memory_support.a $(obj).target/native_client/src/shared/gio/libgio.a $(obj).target/native_client/src/shared/imc/libimc.a $(obj).target/native_client/src/shared/platform/libplatform.a $(obj).target/native_client/src/shared/srpc/libnonnacl_srpc.a $(obj).target/native_client/src/trusted/desc/libnrd_xfer.a $(obj).target/native_client/src/trusted/nonnacl_util/libnonnacl_util.a $(obj).target/native_client/src/trusted/platform_qualify/libplatform_qual_lib.a $(obj).target/native_client/src/trusted/gio/libgio_wrapped_desc.a $(obj).target/native_client/src/trusted/simple_service/libsimple_service.a $(obj).target/native_client/src/trusted/reverse_service/libreverse_service.a $(obj).target/native_client/src/trusted/weak_ref/libweak_ref.a $(obj).target/ppapi/libppapi_cpp.a $(obj).target/third_party/jsoncpp/libjsoncpp.a $(obj).target/base/libbase.a $(obj).target/base/libbase_static.a $(obj).target/base/allocator/liballocator_extension_thunks.a $(obj).target/third_party/modp_b64/libmodp_b64.a $(obj).target/base/third_party/dynamic_annotations/libdynamic_annotations.a $(obj).target/base/libsymbolize.a $(obj).target/base/libxdg_mime.a $(obj).target/third_party/libevent/libevent.a $(obj).target/media/libmedia_sse.a $(obj).target/native_client/src/trusted/desc/libdesc_wrapper.a $(obj).target/native_client/src/trusted/nacl_base/libnacl_base.a $(obj).target/native_client/src/trusted/nonnacl_util/libsel_ldr_launcher.a $(obj).target/native_client/src/shared/serialization/libserialization.a $(obj).target/native_client/src/trusted/service_runtime/libenv_cleanser.a $(obj).target/native_client/src/trusted/service_runtime/libnacl_error_code.a $(obj).target/native_client/src/trusted/cpu_features/libcpu_features.a $(obj).target/native_client/src/trusted/threading/libthread_interface.a $(obj).target/ppapi/libppapi_cpp_objects.a FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += $(obj).target/ppapi/native_client/src/trusted/plugin/libppGoogleNaClPluginChrome.so
# Add target alias
.PHONY: ppGoogleNaClPluginChrome
ppGoogleNaClPluginChrome: $(builddir)/libppGoogleNaClPluginChrome.so

# Copy this to the executable output path.
$(builddir)/libppGoogleNaClPluginChrome.so: TOOLSET := $(TOOLSET)
$(builddir)/libppGoogleNaClPluginChrome.so: $(obj).target/ppapi/native_client/src/trusted/plugin/libppGoogleNaClPluginChrome.so FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/libppGoogleNaClPluginChrome.so
# Short alias for building this executable.
.PHONY: libppGoogleNaClPluginChrome.so
libppGoogleNaClPluginChrome.so: $(obj).target/ppapi/native_client/src/trusted/plugin/libppGoogleNaClPluginChrome.so $(builddir)/libppGoogleNaClPluginChrome.so

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/libppGoogleNaClPluginChrome.so

