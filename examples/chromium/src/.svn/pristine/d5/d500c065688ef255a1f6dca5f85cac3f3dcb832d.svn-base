# -*- python -*-
# Copyright (c) 2012 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

Import('env')

# This library contains PNaCl ABI shims which convert between the
# x86-64/ARM native calling conventions used by the IRT library
# (which uses gcc's ABI) and those used by the PNaCl translator.
# It was necessitated by problems in passing structures by value using
# portable bitcode
#
# We build the library on all architectures so that we can use the
# same entry point symbol everywhere.  On x86-32,
# the library currently does no calling conventions
# conversion.
if not env.Bit('bitcode'):
  Return()

# The library is currently compiled with nacl-gcc on x86 and with
# PNaCl on ARM.
# Clear out the pnacl_generate_pexe bit to allow building this as a
# library dependency (much like the IRT).
native_env = env.Clone()
native_env.ClearBits('pnacl_generate_pexe')
if env.Bit('target_arm'):
  native_env.PNaClForceNative()
  native_env.Append(CCFLAGS=['--pnacl-frontend-triple=armv7-unknown-nacl-gnueabi',
                             '-mfloat-abi=hard'])
else:
  native_env = native_env.PNaClGetNNaClEnv()

pnacl_irt_shim = native_env.ComponentLibrary('pnacl_irt_shim', [
    'pnacl_shim.c',
    'shim_entry.c',
    'shim_ppapi.c',
    ])

# However, the library is part of the pnacl sdk (use original env).
env.AddLibraryToSdk(pnacl_irt_shim)

env.AddObjectToSdk(['libpnacl_irt_shim.a'])
