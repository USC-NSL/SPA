// Copyright (c) 2012 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

namespace experimental.mediaGalleries {

  callback AssembleMediaFileCallback =
      void ([instanceOf=Blob] optional object mediaFile);

  interface Functions {
    // Create a new MediaFile setting the metadata in the Blob to the supplied
    // values, overriding any existing metadata in the media file. If user agent
    // does not recognize the Blob as a supported file format, it will fail.
    // |mediaFileContents| : the media bytes.
    // |metadata| : the metadata. TODO(estade): this should be
    // [instanceOf=Metafile].
    static void assembleMediaFile(
        [instanceOf=Blob] object mediaFileContents,
        object metadata,
        AssembleMediaFileCallback callback);

    // Get any thumbnails contained in the passed media file. The resulting
    // directory reader refers to a virtual directory that can not be navigated
    // to. If there are no thumbnails in the passed file entry, the virtual
    // directory will have no entries.
    // TODO(estade): The return type should be Directory. The argument type
    // should be [instanceOf=FileEntry].
    [nocompile] static object extractEmbeddedThumbnails(object mediaFile);
  };

};
