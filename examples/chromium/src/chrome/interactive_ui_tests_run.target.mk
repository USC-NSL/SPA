# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := interactive_ui_tests_run
### Generated for rule _home_david_Projects_spa_examples_chromium_src_chrome_chrome_gyp_interactive_ui_tests_run_target_isolate:
$(builddir)/interactive_ui_tests.isolated: obj := $(abs_obj)
$(builddir)/interactive_ui_tests.isolated: builddir := $(abs_builddir)
$(builddir)/interactive_ui_tests.isolated: TOOLSET := $(TOOLSET)
$(builddir)/interactive_ui_tests.isolated: chrome/interactive_ui_tests.isolate tools/swarm_client/isolate.py tools/swarm_client/isolateserver_archive.py tools/swarm_client/run_isolated.py tools/swarm_client/run_test_cases.py tools/swarm_client/short_expression_finder.py tools/swarm_client/trace_inputs.py FORCE_DO_CMD
	$(call do_cmd,_home_david_Projects_spa_examples_chromium_src_chrome_chrome_gyp_interactive_ui_tests_run_target_isolate_0)

all_deps += $(builddir)/interactive_ui_tests.isolated
cmd__home_david_Projects_spa_examples_chromium_src_chrome_chrome_gyp_interactive_ui_tests_run_target_isolate_0 = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd chrome; mkdir -p $(builddir); python ../tools/swarm_client/isolate.py check --outdir "$(builddir)/ " --variable PRODUCT_DIR "$(builddir) " --variable "OS=linux" --result "$(builddir)/interactive_ui_tests.isolated" --isolate "$(abspath $<)" --ignore_broken_items
quiet_cmd__home_david_Projects_spa_examples_chromium_src_chrome_chrome_gyp_interactive_ui_tests_run_target_isolate_0 = RULE _home_david_Projects_spa_examples_chromium_src_chrome_chrome_gyp_interactive_ui_tests_run_target_isolate_0 $@

rule__home_david_Projects_spa_examples_chromium_src_chrome_chrome_gyp_interactive_ui_tests_run_target_isolate_outputs := \
	$(builddir)/interactive_ui_tests.isolated

### Finished generating for rule: _home_david_Projects_spa_examples_chromium_src_chrome_chrome_gyp_interactive_ui_tests_run_target_isolate

### Finished generating for all rules

DEFS_Debug := \
	'-D_FILE_OFFSET_BITS=64' \
	'-DUSE_LINUX_BREAKPAD' \
	'-DCHROMIUM_BUILD' \
	'-DUSE_DEFAULT_RENDER_THEME=1' \
	'-DUSE_LIBJPEG_TURBO=1' \
	'-DUSE_NSS=1' \
	'-DUSE_X11=1' \
	'-DENABLE_ONE_CLICK_SIGNIN' \
	'-DGTK_DISABLE_SINGLE_INCLUDES=1' \
	'-DENABLE_REMOTING=1' \
	'-DENABLE_WEBRTC=1' \
	'-DENABLE_CONFIGURATION_POLICY' \
	'-DENABLE_INPUT_SPEECH' \
	'-DENABLE_NOTIFICATIONS' \
	'-DENABLE_GPU=1' \
	'-DENABLE_EGLIMAGE=1' \
	'-DENABLE_TASK_MANAGER=1' \
	'-DENABLE_EXTENSIONS=1' \
	'-DENABLE_PLUGIN_INSTALLATION=1' \
	'-DENABLE_PLUGINS=1' \
	'-DENABLE_SESSION_SERVICE=1' \
	'-DENABLE_THEMES=1' \
	'-DENABLE_BACKGROUND=1' \
	'-DENABLE_AUTOMATION=1' \
	'-DENABLE_GOOGLE_NOW=1' \
	'-DENABLE_LANGUAGE_DETECTION=1' \
	'-DENABLE_PRINTING=1' \
	'-DENABLE_CAPTIVE_PORTAL_DETECTION=1' \
	'-DENABLE_MANAGED_USERS=1' \
	'-DGL_GLEXT_PROTOTYPES' \
	'-DLIBPEERCONNECTION_LIB=1' \
	'-D__STDC_CONSTANT_MACROS' \
	'-D__STDC_FORMAT_MACROS' \
	'-DDYNAMIC_ANNOTATIONS_ENABLED=1' \
	'-DWTF_USE_DYNAMIC_ANNOTATIONS=1' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := \
	-fstack-protector \
	--param=ssp-buffer-size=4 \
	-Werror \
	-pthread \
	-fno-exceptions \
	-fno-strict-aliasing \
	-Wall \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-fvisibility=hidden \
	-pipe \
	-fPIC \
	-Wheader-hygiene \
	-Wno-unused-function \
	-Wno-char-subscripts \
	-Wno-unnamed-type-template-args \
	-Wno-c++11-extensions \
	-Wno-covered-switch-default \
	-Wstring-conversion \
	-Xclang \
	-load \
	-Xclang \
	/home/david/Projects/spa/examples/chromium/src/tools/clang/scripts/../../../third_party/llvm-build/Release+Asserts/lib/libFindBadConstructs.so \
	-Xclang \
	-add-plugin \
	-Xclang \
	find-bad-constructs \
	-Xclang \
	-plugin-arg-find-bad-constructs \
	-Xclang \
	skip-virtuals-in-implementations \
	-pthread \
	-I/usr/include/glib-2.0 \
	-I/usr/lib/x86_64-linux-gnu/glib-2.0/include \
	-I/usr/include/gtk-2.0 \
	-I/usr/lib/x86_64-linux-gnu/gtk-2.0/include \
	-I/usr/include/atk-1.0 \
	-I/usr/include/cairo \
	-I/usr/include/gdk-pixbuf-2.0 \
	-I/usr/include/pango-1.0 \
	-I/usr/include/gio-unix-2.0/ \
	-I/usr/include/freetype2 \
	-I/usr/include/pixman-1 \
	-I/usr/include/libpng12 \
	-I/usr/include/harfbuzz \
	-O0 \
	-g

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-fno-rtti \
	-fno-threadsafe-statics \
	-fvisibility-inlines-hidden \
	-Wsign-compare

INCS_Debug := \
	-Ithird_party/khronos \
	-Igpu \
	-I.

DEFS_Release := \
	'-D_FILE_OFFSET_BITS=64' \
	'-DUSE_LINUX_BREAKPAD' \
	'-DCHROMIUM_BUILD' \
	'-DUSE_DEFAULT_RENDER_THEME=1' \
	'-DUSE_LIBJPEG_TURBO=1' \
	'-DUSE_NSS=1' \
	'-DUSE_X11=1' \
	'-DENABLE_ONE_CLICK_SIGNIN' \
	'-DGTK_DISABLE_SINGLE_INCLUDES=1' \
	'-DENABLE_REMOTING=1' \
	'-DENABLE_WEBRTC=1' \
	'-DENABLE_CONFIGURATION_POLICY' \
	'-DENABLE_INPUT_SPEECH' \
	'-DENABLE_NOTIFICATIONS' \
	'-DENABLE_GPU=1' \
	'-DENABLE_EGLIMAGE=1' \
	'-DENABLE_TASK_MANAGER=1' \
	'-DENABLE_EXTENSIONS=1' \
	'-DENABLE_PLUGIN_INSTALLATION=1' \
	'-DENABLE_PLUGINS=1' \
	'-DENABLE_SESSION_SERVICE=1' \
	'-DENABLE_THEMES=1' \
	'-DENABLE_BACKGROUND=1' \
	'-DENABLE_AUTOMATION=1' \
	'-DENABLE_GOOGLE_NOW=1' \
	'-DENABLE_LANGUAGE_DETECTION=1' \
	'-DENABLE_PRINTING=1' \
	'-DENABLE_CAPTIVE_PORTAL_DETECTION=1' \
	'-DENABLE_MANAGED_USERS=1' \
	'-DGL_GLEXT_PROTOTYPES' \
	'-DLIBPEERCONNECTION_LIB=1' \
	'-D__STDC_CONSTANT_MACROS' \
	'-D__STDC_FORMAT_MACROS' \
	'-DNDEBUG' \
	'-DNVALGRIND' \
	'-DDYNAMIC_ANNOTATIONS_ENABLED=0' \
	'-D_FORTIFY_SOURCE=2'

# Flags passed to all source files.
CFLAGS_Release := \
	-fstack-protector \
	--param=ssp-buffer-size=4 \
	-Werror \
	-pthread \
	-fno-exceptions \
	-fno-strict-aliasing \
	-Wall \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-fvisibility=hidden \
	-pipe \
	-fPIC \
	-Wheader-hygiene \
	-Wno-unused-function \
	-Wno-char-subscripts \
	-Wno-unnamed-type-template-args \
	-Wno-c++11-extensions \
	-Wno-covered-switch-default \
	-Wstring-conversion \
	-Xclang \
	-load \
	-Xclang \
	/home/david/Projects/spa/examples/chromium/src/tools/clang/scripts/../../../third_party/llvm-build/Release+Asserts/lib/libFindBadConstructs.so \
	-Xclang \
	-add-plugin \
	-Xclang \
	find-bad-constructs \
	-Xclang \
	-plugin-arg-find-bad-constructs \
	-Xclang \
	skip-virtuals-in-implementations \
	-pthread \
	-I/usr/include/glib-2.0 \
	-I/usr/lib/x86_64-linux-gnu/glib-2.0/include \
	-I/usr/include/gtk-2.0 \
	-I/usr/lib/x86_64-linux-gnu/gtk-2.0/include \
	-I/usr/include/atk-1.0 \
	-I/usr/include/cairo \
	-I/usr/include/gdk-pixbuf-2.0 \
	-I/usr/include/pango-1.0 \
	-I/usr/include/gio-unix-2.0/ \
	-I/usr/include/freetype2 \
	-I/usr/include/pixman-1 \
	-I/usr/include/libpng12 \
	-I/usr/include/harfbuzz \
	-O2 \
	-fdata-sections \
	-ffunction-sections

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-fno-rtti \
	-fno-threadsafe-statics \
	-fvisibility-inlines-hidden \
	-Wsign-compare

INCS_Release := \
	-Ithird_party/khronos \
	-Igpu \
	-I.

OBJS :=

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(builddir)/interactive_ui_tests $(builddir)/xdisplaycheck

# Make sure our actions/rules run before any of us.
$(OBJS): | $(rule__home_david_Projects_spa_examples_chromium_src_chrome_chrome_gyp_interactive_ui_tests_run_target_isolate_outputs)


### Rules for final target.
# Build our special outputs first.
$(obj).target/chrome/interactive_ui_tests_run.stamp: | $(rule__home_david_Projects_spa_examples_chromium_src_chrome_chrome_gyp_interactive_ui_tests_run_target_isolate_outputs)

# Preserve order dependency of special output on deps.
$(rule__home_david_Projects_spa_examples_chromium_src_chrome_chrome_gyp_interactive_ui_tests_run_target_isolate_outputs): | $(builddir)/interactive_ui_tests $(builddir)/xdisplaycheck

$(obj).target/chrome/interactive_ui_tests_run.stamp: TOOLSET := $(TOOLSET)
$(obj).target/chrome/interactive_ui_tests_run.stamp: $(builddir)/interactive_ui_tests $(builddir)/xdisplaycheck FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/chrome/interactive_ui_tests_run.stamp
# Add target alias
.PHONY: interactive_ui_tests_run
interactive_ui_tests_run: $(obj).target/chrome/interactive_ui_tests_run.stamp

# Add target alias to "all" target.
.PHONY: all
all: interactive_ui_tests_run

